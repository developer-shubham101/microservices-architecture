version: '3.8'

services:
  # --- INFRASTRUCTURE SERVICES ---
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - springboot-mongo-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - springboot-mongo-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - springboot-mongo-network

  keycloak-db:
    image: postgres:13-alpine
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password # CHANGE FOR PRODUCTION!
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - springboot-mongo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:19.0.3 # Using a modern, stable version
    container_name: keycloak
    environment:
      # Database connection
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak # Uses service name 'keycloak-db'
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password # Must match the password for keycloak-db
      # Admin credentials
      KEYCLOAK_ADMIN: admin          # CHANGE FOR PRODUCTION!
      KEYCLOAK_ADMIN_PASSWORD: admin # CHANGE FOR PRODUCTION!
    command: start-dev # Use 'start' in production for better performance
    ports:
      - "8080:8080"
    depends_on:
      keycloak-db:
        condition: service_healthy # Ensures the DB is ready before Keycloak starts
    networks:
      - springboot-mongo-network

  # --- APPLICATION SERVICES ---
  service-discovery:
    image: service-discovery
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - springboot-mongo-network

  sb-user:
    image: sb-user
    build:
      context: ./sb-user
      dockerfile: Dockerfile
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/my_first_spring_project
    depends_on:
      - mongo
      - service-discovery
    ports:
      - "7072:7072"
    networks:
      - springboot-mongo-network

  sb-blog-info:
    image: sb-blog-info
    build:
      context: ./sb-blog-info
      dockerfile: Dockerfile
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/my_first_spring_project
      SPRING_DATA_REDIS_HOST: redis
    depends_on:
      - mongo
      - service-discovery
      - redis
    ports:
      - "7070:7070"
    networks:
      - springboot-mongo-network

  sb-blog-business:
    image: sb-blog-business
    build:
      context: ./sb-blog-business
      dockerfile: Dockerfile
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/my_first_spring_project
      SPRING_DATA_REDIS_HOST: redis
    depends_on:
      - mongo
      - service-discovery
      - redis
    ports:
      - "7071:7071"
    networks:
      - springboot-mongo-network

  sb-blog-comments:
    image: sb-blog-comments
    build:
      context: ./sb-blog-comments
      dockerfile: Dockerfile
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/my_first_spring_project
      SPRING_DATA_REDIS_HOST: redis
    depends_on:
      - mongo
      - service-discovery
      - redis
    ports:
      - "7075:7075"
    networks:
      - springboot-mongo-network

  api-gateway:
    image: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    depends_on:
      - sb-user
      - sb-blog-info
      - sb-blog-business
      - sb-blog-comments
      - service-discovery
    ports:
      - "8084:8084"
    networks:
      - springboot-mongo-network

volumes:
  mongo-data:
  keycloak-db-data: # Added volume for PostgreSQL data persistence

networks:
  springboot-mongo-network:
    driver: bridge