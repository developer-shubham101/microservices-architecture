server:
  port: 8084

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      routes:
        - id: SB-USER
          uri: lb://SB-USER
          predicates:
            - Path=/users/**
#          filters:
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 5 # Number of tokens added per second
#                redis-rate-limiter.burstCapacity: 10 # Max tokens in the bucket
#                key-resolver: {@ipKeyResolver} # Use IP address for rate limiting

        - id: SB-BLOG-BUSINESS
          uri: lb://SB-BLOG-BUSINESS
          predicates:
            - Path=/blogs/v1/business/**

        - id: SB-BLOG-INFO
          uri: lb://SB-BLOG-INFO
          predicates:
            - Path=/blogs/v1/info/**

        - id: SB-BLOG-COMMENTS
          uri: lb://SB-BLOG-COMMENTS
          predicates:
            - Path=/comments/**


eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka



#okta configuration for api gateway

okta:
  oauth2:
    issuer: https://dev-40764327.okta.com/oauth2/default
    audience: api://default
    client-id: 0oalq1vds6cMQZ3h25d7
    client-secret: gQL-vgxJNwfonkSCV10Q9UpVUm8UuEVXe178r7orqI0gZzwznB8nYlJCTAO3j5PE
    scopes: openid, profile, email, offline_access