openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0

paths:
  /blogs/v1/business/:
    post:
      summary: Add a New Blog
      operationId: createNewBlog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogReq'
      responses:
        '201':
          description: Blog created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogRes'
        '400':
          description: Bad Request (missing required fields)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /blogs/v1/business/{blogId}:
    parameters:
      - in: path
        name: blogId
        required: true
        description: ID of the blog
        schema:
          type: string
    put:
      summary: Update an Existing Blog
      operationId: updateBlog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogReq'
      responses:
        '200':
          description: Blog updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogRes'
        '400':
          description: Bad Request (invalid request body or missing required fields)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Blog not found
        default:
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a Blog
      operationId: deleteBlog
      responses:
        '204':
          description: Blog deleted successfully
        '404':
          description: Blog not found
        default:
          description: Error deleting blog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /blogs/v1/business/{blogId}/comments:
    parameters:
      - in: path
        name: blogId
        required: true
        description: ID of the blog
        schema:
          type: string
    post:
      summary: Create a New Comment for a Blog
      operationId: createBlogComment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      responses:
        '201':
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        '400':
          description: Bad Request (missing required fields or invalid request body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Blog not found
        default:
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:

    # Blog entity
    BlogReq:
      type: object
      required:
        - userId
        - title
        - content
      properties:
        userId:
          type: string
        title:
          type: string
        content:
          type: string
        categories:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
    BlogRes:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        title:
          type: string
        content:
          type: string
        categories:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        comments:
          type: array
          items:
            type: CommentResponse

    # Comment entity
    CommentRequest:
      type: object
      properties:
        userId:
          type: string
        content:
          type: string

    CommentResponse:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        blogId:
          type: string
        content:
          type: string

    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string

